;*************************************************************
;	Zeitgeberdienst, Version 10.05.88
; BAB2 als Standard
; - Tastatur im 25ms-Polling statt direkt ueber Interrupt wegen V.24
; - Cursor fuer Bildschirm ueber 25ms-Zeittakt statt sofort
; - zusaetzliche Laufwerksabschaltung ueber Zeittakt eingefuehrt
;*************************************************************

 IF1

timwarm	MACRO
	ld	hl,ret		;;leere 1-sec-Interr.routine
	ld	(tim1rt),hl
	ld	a,0fh
	out	(sysctc+2),a	;;stoppen evtl. laufenden CTC 0a
 	ld	a,0
bsform	equ	$-1
	out	(sysctc+2),a	;;und erneut Bildschirmformat einst.
	call	tim5on		;;25ms-Zeittakt ein
	ENDM

 ENDIF

; 5ms/25ms an
tim5on:	xor	a
	ld	(crtccn),a	;Flag "Timer aus" fuer Cursor wieder loeschen
	ld	a,10110001b
;int./zeitg./vort.256/pos.flanke/naechst.zykl./keine zk/
;	weiter/1
tim5ot:	DI
	out	(sysctc+timctc),a
	EI
ret:	ret

; 5ms/25ms aus
tim5of:	ld	hl,crtccn
	ld	a,(hl)
	ld	(hl),0ffh	;Setzen Flag "Timer aus" fuer Cursor
	or	a		;muss noch Cursor gesetzt werden?
	jr	z,tincur	;nein
	inc	a		;war Flag "Timer aus"?
	call	nz,crtscp	;nein, Cursor setzen bevor Timer abgeschaltet
tincur:
	ld	a,00110001b
;kein int./...
	jr	tim5ot

tim1on	equ	tim5on
tim1of	equ	tim5of

; Interr.routine 5ms/25ms
tim5it:
 IF stpvar or monitor
	ld	(t5ihl),hl	;retten hl
	ld	hl,chksp	;Test auf haengende Spezialfktnen
	push	hl		;nach const-Aufruf in CTC-Interrupt
	ld	hl,0		;wiederherstellen hl
t5ihl	equ	$-2
 ENDIF
	ld	(intsp),sp
	ld	sp,intstk
	push	af
	push	hl
	push	de
	push	bc
	ld	hl,(tim5cn)
	inc	hl
	ld	(tim5cn),hl
	ld	hl,crtccn
	ld	a,(hl)
	or	a		;verzoegertes Cursor-Setzen im Bildschirm?
	jr	z,tim5cu	;nein
	dec	(hl)		;Zaehler -1
	call	z,crtscp	;abgelaufen, Cursor setzen
tim5cu:
	ld	a,0
tim1sc	equ	$-1
	inc	a
	cp	1000/25		;1 Sec um?
	jr	c,tim1s1	;nein
	xor	a		;sonst wieder auf 0 und Z-Flag
tim1s1:	ld	(tim1sc),a
	call	z,tim1up	; 1s Interrupt simulieren
intkbd:	call	kbdsti		;Tastatur abfragen und puffern
intrbc:				;allg. Interr.-ausgang
	pop	bc
	pop	de
intrhl:				;allg. Interr.-ausgang
	pop	hl
intraf:				;allg. Interr.-ausgang
	pop	af
	ld	sp,0
intsp	equ	$-2
intret:				;allg. Interr.-ausgang
	ei
	reti

 .comment % bei PC1715 kein expliziter 1 sek Zeittakt
; Interr.routine 1s
tim1it:	ld	(intsp),sp
	ld	sp,intstk
	push	af
	push	hl
	push	de
	push	bc
	call	tim1up
	jr	intrbc
%

; Reaktionsroutine fuer 1 sec Interrupt
tim1up:	ld	hl,(tim1cn)
	dec	hl
	ld	(tim1cn),hl
 IF uhrvar
;1 Sec. BCD-Uhr verwalten
	ld	b,3		;HH:MM:SS
	ld	hl,bcduhr+2	;auf SS
	jr	t1uhr1		;Einsprung in Zyklus
t1uhr2:	cp	60h		;Uebertrag?
	jr	c,t1uhre	;nein
	ld	(hl),0
	dec	hl
t1uhr1:	ld	a,(hl)
	add	a,1		;kein "inc"-Befehl!
	daa
	djnz	t1uhr2		;Sec., Min. haben 60
	cp	24h		;Std. haben 24
	jr	c,t1uhre	;kein Uebertrag
	xor	a
t1uhre:	ld	(hl),a
 ENDIF
	ld	a,(synsem)
	or	a		;const, conout ?
	jr	nz,tim1uu	;ja, keine asysnchronen Aktionen

	call	lampen		;Aktualisierung Lampen

;;;	setbs			;Bildschirm zuschalten

 IF cpastz
; Default-LW, User in Statuszeile
	ld	a,(defaul)
	push	af
	and	0fh		;User loeschen
	add	a,'A'
	ld	de,statz2+statzd
crtm27	equ	$-2		;BS-Puffer-Adr
	ld	(de),a		;anzeigen default-LW
	pop	af
	inc	de
	call	mrecol		;anzeigen user

; I/O-Byte in Statuszeile
	ld	a,(iobyte)
	ld	de,statz2+statzi
crtm38	equ	$-2
	call	mrecoa

; wenn Anzeigezeit um, so BIOS-Meldung wieder loeschen

	ld	hl,stzbto	;Anzeigezeit in Sekunden
	dec	(hl)		;abgelaufen?
	jr	nz,nstzcl	;nein
	ld	b,stzbl
	ld	hl,statz2+statzb
crtm28	equ	$-2		;BS-Puffer-Adr.
stzclz:	ld	(hl),' '
	inc	hl
	djnz	stzclz
nstzcl:
 ENDIF

 IF uhrvar
; Uhr anzeigen
	ld	hl,synflg
	bit	uhraus,(hl)	;Uhr anzeigen?
	jr	nz,t1uhrn	;nein
	ld	hl,bcduhr
 IF cpastz
	ld	de,statz2+statzu
 ELSE
	ld	de,bsanf2+bssp2-8
 ENDIF
bsuhr	equ	$-2		;BS-Puffer-Adr. fuer Uhr
	ld	b,3
	jr	t1uhr4		;Einsprung in Zyklus
t1uhr3:	ld	a,':'
	ld	(de),a
	inc	de
t1uhr4:	call	mbreco
	inc	hl
	djnz	t1uhr3
t1uhrn:
 ENDIF

;;;	setram			;Bildschirm wieder abschalten

tim1uu:
; zusaetzliche Laufwerksabschaltung ueber Zeittakt
	ld	a,(pretx+1)	;Motorabschaltung unterdrueckt?
	or	a
	jr	z,t1nmo1	;ja
	ld	a,(fl.zto)	;pro Sekunde 5 Umdrehungen
	sub	4		;noch >= 4* 200ms Zeit?
	jr	nc,t1nmo2	;ja
	xor	a
t1nmo2:	ld	(fl.zto),a
	call	z,headup	;Ueberw.zeit abgelaufen -> Motor aus
t1nmo1:

	ld	hl,(tim1rt)	;Adresse der Nutzerroutine
	jp	(hl)		;1-sec-Nutzerroutine ausfuehren, ret

