;;***************************************************************
;;	Arbeitsbereiche logischer Floppy-Treiber im System-RAM *
;;***************************************************************
;; 03.06.89

 IF errvar
;; Fehlermeldung Disk I/O Error
;;=============================
;; Genau so lang (kurz), wie in Statuszeile Platz dafuer da ist!
;; und das sind 17 Bytes!
derrms:
 IF cpastz
 ELSE
	db	0dh,0ah
 ENDIF
derrrw:	db	'X'
derrcd:	db	'X;T,Si,Se='
derrtr:	db	'XX'
derrts:	db	'XX'
derrsc:	db	'XX'
 IF cpastz
 ELSE
	db	07h,0
 ENDIF

 ENDIF

;; CDB's
;;======

;;CDB fuer Bestimmung Laufwerksbereitschaft bei Select Disk
;;--------------------------------------------------------
drdcdb:
drdflg:	db	(1 shl dioftr)	;;Lesen, kein Fehlerprotokoll
drddev:	db	0ffh		;;Geraet
drdtrk:	dw	0		;;Spur
	db	1		;;Sektor (bel.)
	db	1		;;Sektorlaengencode (>0, 1..3)
	db	0		;;Sektoranzahl=0 -> nur Positionieren

	IF	format
;; CDB fuer Bestimmung Spurformat
;;------------------------------------
dfrcdb:
dfrflg:	db	(1 shl diofid)+(1 shl dioftr)
;;		Lesen Sektorid., kein Fehlerprotokoll
dfrmdv:	db	0ffh		;;Geraet
dfrmtr:	db	0ffh		;;Spur
	db	0ffh		;;Seite (bel.)
	db	1		;;Sektor (bel.)
	db	1		;;Sektorlaengencode (>0, 1..3)
	db	1		;;Sektoranzahl (>0)
	ENDIF

	IF	format or (dbufsz gt 7)
;; Puffer-CDB
;;-----------
dbcdb:
dbflg:	db	0
dfbprr	equ	diof00		;;=1, wenn Puffer erst gelesen 
;;				     werden muss
dfbwr	equ	diofwr		;;=1, wenn Puffer durch
;;				     Schreiben veraendert
dfbtr	equ	dioftr		;;=1, wenn mit Fehlerprotokoll
;; restliche Bits immer =0
dbdev:	db	0ffh
dbtrk:	db	0ffh
dbsid:	db	0ffh
dbsec:	db	0ffh
dbslc:	db	0ffh
dbsnb:	db	0ffh
	IF	dbufsz gt 7
dbdma:	dw	dbuf
	ELSE
dbdma:	dw	dirbuf
	ENDIF
	ENDIF

;; CDB fuer ungepufferte E/A
;;--------------------------

dcdb:
dflg:	db	0
dfwr	equ	diofwr 		;;=1, wenn write-Aufruf
;; restliche Bits immer =0
ddrive:	db	0
dtrack:	db	0ffh
	db	0ffh		;;Seite
dsectr:	db	0ffh
	db	0		;;128 Bytes Sektorlaenge
	db	1		;;immer nur 1 Sektor
ddma:	dw	0ffffh

 if ramfl
rtrack	equ	dtrack
 endif

;; Pufferzugriff
 IF @write
 IF dbufsz gt 7
unacnt:	db	0,0ffh,0ffh,0ffh,0
unadev	equ	unacnt+1
unatrk	equ	unacnt+2
unasec	equ	unacnt+4
 ENDIF
 ENDIF
 IF dbufsz gt 7
dbnb:	db	0ffh
dwrtyp:	db	0ffh
dberrf:	db	0		;;Ergebnisflag letztes dbtran
 ENDIF
